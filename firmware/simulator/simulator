#include <unicore-mx/stm32/rcc.h>
#include <unicore-mx/stm32/gpio.h>
#include <unicore-mx/stm32/timer.h>

int main(void)
{
	rcc_clock_setup_in_hse_8mhz_out_72mhz();

	rcc_periph_clock_enable(RCC_GPIOA);
	gpio_set_mode(
		GPIOA,
		GPIO_MODE_OUTPUT_2_MHZ,
		GPIO_CNF_OUTPUT_PUSHPULL,
		GPIO0 | GPIO1 | GPIO2 | GPIO3 |
		GPIO4 | GPIO5 | GPIO6 | GPIO7
	);
	rcc_periph_clock_enable(RCC_GPIOB);
	gpio_set_mode(
		GPIOB,
		GPIO_MODE_OUTPUT_2_MHZ,
		GPIO_CNF_OUTPUT_PUSHPULL,
		GPIO0
	);

	int counter = 0;
	int delays[] = {
		100, 50, 200, 100
	};
	int delay_index = 0;
	while(1) {
		GPIO_ODR(GPIOA) = (int16_t)counter;
		gpio_set(GPIOB, GPIO0);
		for(int i = 0; i < 100; i++)
			__asm__("nop");
		gpio_clear(GPIOB, GPIO0);
		for(int i = 0; i < delays[delay_index]; i++)
			__asm__("nop");
		delay_index++;
		if(delay_index >= 4) delay_index = 0;
		counter++;
	}

	return 0;
}
